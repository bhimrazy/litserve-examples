name: CI Testing

on:
  push:
    branches: [main, "release/*"]
  pull_request:
    branches: [main, "release/*"]
  schedule:
    - cron: "0 0 * * *"

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/ruff-action@v3

  list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: List example directories
        id: list
        run: |
          examples=$(find . -maxdepth 1 -type d ! -name '.' ! -name '.git' ! -name '.github' | sed 's|^\./||' | sort | sed 's/.*/"&"/' | paste -sd, -)
          matrix="[$examples]"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
          echo "Found examples: $matrix"

  test:
    runs-on: ubuntu-latest
    needs: list
    strategy:
      matrix:
        python-version: ["3.12"]
        example: ${{ fromJson(needs.list.outputs.matrix) }}

    timeout-minutes: 5
    env:
      UV_TORCH_BACKEND: "cpu"

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install uv and set Python version ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Install dependencies
        run: |
          uv pip install -r ${{ matrix.example }}/requirements.txt
          uv pip list

      - name: Start server
        run: |
          cd ${{ matrix.example }}
          uv run python server.py &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV

      - name: Wait for server to be ready
        run: |
          timeout=120
          elapsed=0
          while [ $elapsed -lt $timeout ]; do
            if curl -s http://localhost:8000/health > /dev/null 2>&1; then
              echo "Server is ready"
              break
            fi
            sleep 5
            elapsed=$((elapsed + 5))
          done
          if [ $elapsed -ge $timeout ]; then
            echo "Server did not start within $timeout seconds"
            kill $SERVER_PID || true
            exit 1
          fi

      - name: Run client test
        run: |
          cd ${{ matrix.example }}
          if [ -f test.sh ]; then sh test.sh; else uv run python client.py; fi

      - name: Stop server
        run: |
          kill $SERVER_PID || true

      - name: Minimize uv cache
        run: uv cache prune --ci
